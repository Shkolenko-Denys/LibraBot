from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text

import keyboards
from dispatcher import dp
from db.LibraLibrary import libra_library


@dp.message_handler(commands="start")
async def start_command(message: types.Message, state: FSMContext):
    await state.finish()
    name = libra_library.get_user_name(message.from_user.id)
    if name:
        await message.answer(
            f"–ü—Ä–∏–≤—ñ—Ç, {name} ‚úå\n"
            f"–Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞, —Ç–∏—Å–Ω–∏ /help\n"
            f"–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –≤–Ω–∏–∑—É, —â–æ–± –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ –∫–æ–º–∞–Ω–¥–∏ üëá\n",
            reply_markup=keyboards.StartKeyboard.keyboard)
    else:
        await message.answer(
            f"–ü—Ä–∏–≤—ñ—Ç ‚úå\n"
            f"–¢–∏ —â–µ –Ω–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π, —Ç–∏—Å–Ω–∏ /register\n"
            f"–Ø–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞, —Ç–∏—Å–Ω–∏ /help\n",
            reply_markup=keyboards.StartKeyboard.keyboard)


@dp.message_handler(Text(equals="–°–∫–∞—Å—É–≤–∞—Ç–∏ ‚ùå"))
async def cancel(message: types.Message, state: FSMContext):
    await state.finish()
    await message.answer("–°–∫–∞—Å–æ–≤–∞–Ω–æ",
                         reply_markup=keyboards.StartKeyboard.keyboard)


@dp.message_handler(Text(equals="‚¨Ö –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è"))
async def back_to_start_menu(message):
    await message.answer(message, "üëá –û–∫–µ–π, —â–æ –¥–∞–ª—ñ? üëá",
                         reply_markup=keyboards.StartKeyboard.keyboard)


@dp.message_handler(commands="help")
async def cancel(message: types.Message, state: FSMContext):
    await state.finish()
    await message.answer("–î–ª—è —Ä–æ–±–æ—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ñ —Ç–∞–∫—ñ –∫–æ–º–∞–Ω–¥–∏:\n"
                         "/register -- –¥–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó\n"
                         "/game -- –¥–ª—è –≥—Ä–∏\n",
                         reply_markup=keyboards.StartKeyboard.keyboard)
