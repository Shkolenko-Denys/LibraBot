from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text

import keyboards
from dispatcher import dp


@dp.message_handler(commands="start")
async def start_command(message: types.Message, state: FSMContext):
    await state.finish()
    await message.answer(
        "–ü—Ä–∏–≤—ñ—Ç ‚úå\n–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –≤–Ω–∏–∑—É, —â–æ–± –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ –∫–æ–º–∞–Ω–¥–∏ üëá\n",
        reply_markup=keyboards.StartKeyboard.keyboard)


@dp.message_handler(Text(equals="–°–∫–∞—Å—É–≤–∞—Ç–∏ ‚ùå"))
async def cancel(message: types.Message, state: FSMContext):
    await state.finish()
    await message.answer("–°–∫–∞—Å–æ–≤–∞–Ω–æ",
                         reply_markup=keyboards.StartKeyboard.keyboard)


@dp.message_handler(Text(equals="‚¨Ö –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è"))
async def back_to_start_menu(message):
    await message.answer(message, "üëá –û–∫–µ–π, —â–æ –¥–∞–ª—ñ? üëá",
                         reply_markup=keyboards.StartKeyboard.keyboard)
